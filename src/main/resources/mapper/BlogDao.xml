<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.chen.dao.BlogDao">

    <resultMap id="blog" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="typeId" column="type_id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="published" column="published"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentTable" column="commentabled"/>
        <result property="description" column="description"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="userId" column="user_id"/>
        <result property="tagIds" column="tag_ids"/>
        <association property="type" javaType="Type">
            <id property="id" column="typeid"/>
            <result property="name" column="typename"/>
        </association>
        <association property="user" javaType="User">
            <id property="id" column="uid"/>
            <result property="nickname" column="nickname"/>
            <result property="username" column="username"/>
            <result property="email" column="email"/>
            <result property="avatar" column="avatar"/>
        </association>
        <collection property="tags" ofType="Tag">
            <id property="id" column="tagid"/>
            <result property="name" column="tagname"/>
        </collection>
    </resultMap>

    <!--已ok-->

    <select id="findGroupYear" resultType="String">
        select DATE_FORMAT(b.update_time, '%Y') as year from t_blog b group by year order by year desc;
    </select>

    <select id="findByYear" resultMap="blog">
        select b.title,b.update_time,b.id,b.flag
        from t_blog b where DATE_FORMAT(b.update_time, '%Y') = #{year};
    </select>

    <select id="getIndexBlogByTypeId" resultMap="blog">
        select b.id,b.title,b.first_picture,b.views,b.update_time,b.description,
               t.name typename,t.id typeid,
               u.nickname,u.avatar
        from t_blog b,t_type t,t_user u
        where b.type_id = t.id and t.id = #{typeId} and b.user_id = u.id
        order by b.update_time desc
    </select>

    <select id="getIndexBlogByTagId" resultMap="blog">
        select b.id,b.title,b.first_picture,b.views,b.update_time,b.description,
               t.name typename,t.id typeid,
               t1.name tagname,t1.id tagid,
               u.nickname,u.avatar
        from t_blog b,t_tag t1,t_user u,t_type t,t_blog_tags bt
        where b.type_id = t.id and b.user_id = u.id and b.id = bt.blog_id and bt.tag_id = t1.id and t1.id = #{tagId}
        order by b.update_time desc
    </select>

    <select id="getDetailBlog" resultMap="blog">
        select  b.id,b.title,b.content,b.views,b.flag,b.first_picture,b.update_time,b.commentabled,b.share_statement,b.appreciation, t.id tagid,t.name tagname,u.nickname,u.avatar
        from t_blog b,t_user u,t_tag t,t_blog_tags bt
        where b.id = #{id} and b.user_id = u.id and b.id = bt.blog_id and t.id = bt.tag_id
    </select>


    <select id="getIndexBlog" resultMap="blog">
        select b.id,b.title,b.first_picture,b.views,b.update_time,b.description,
               t.name typename,t.id typeid,
               u.nickname,u.avatar
        from t_blog b,t_type t,t_user u
        where b.type_id = t.id and b.user_id = u.id
        order by b.update_time desc
    </select>

    <select id="getAllBlogs" resultMap="blog">
        select b.id,b.title,b.update_time,b.recommend,b.type_id,b.published,t.id typeid,t.name typename
        from t_blog b , t_type t
        where b.type_id = t.id
    </select>


    <!--后台根据标签分类推荐搜索博客-->
    <!--查询结果的typeid和name必须要设置别名，否则无法识别-->
    <select id="getBlogList" parameterType="Blog" resultMap="blog">
        <bind name="pattern" value="'%' + title + '%'" />    /*模糊查询*/
        select b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id typeid, t.name typename
        from t_blog b ,t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id    /*博客类型id=类型id*/
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}       /*根据博客类型查询*/
            </if>
            <if test="recommend != null">
                and b.recommend = #{recommend}   /*根据博客推荐查询*/
            </if>
            <if test="title != null">
                and b.title like #{pattern}   /*根据博客title模糊查询*/
            </if>
        </where>
    </select>

    <insert id="saveBlogAndTag" parameterType="BlogAndTag">
        insert into t_blog_tags (tag_id, blog_id) values (#{tagId},#{blogId});
    </insert>


    <select id="getBlogById" resultMap="blog">
        select b.id,b.published,b.flag,b.title,
               b.content,b.type_id typeid,b.tag_ids,
               b.first_picture,b.description,
               b.recommend,b.share_statement,
               b.appreciation,b.commentabled
        from cl.t_blog b where b.id = #{id};
    </select>


    <!--useGeneratedKeys="true"；使用自增主键获取主键值策略
    keyProperty；指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性
-->
    <insert id="saveBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
        insert into cl.t_blog (title, content, first_picture, flag, views,
                               appreciation, share_statement, commentabled,
                               published, recommend, create_time, update_time,
                               type_id, user_id, description, tag_ids)
                               values (#{title},#{content},#{firstPicture},
                                       #{flag},#{views},#{appreciation},
                                       #{shareStatement},#{commentTable},
                                       #{published},#{recommend},#{createTime},
                                       #{updateTime},#{typeId},#{userId},
                                       #{description},#{tagIds});
    </insert>

    <update id="updateBlog" parameterType="Blog">
        update cl.t_blog set title=#{title},content=#{content},first_picture=#{firstPicture},
         flag=#{flag},appreciation=#{appreciation},
         share_statement=#{shareStatement},commentabled=#{commentTable},
         published=#{published},recommend=#{recommend},description=#{description},
         type_id=#{typeId},tag_ids=#{tagIds},update_time=#{updateTime} where id = #{id};
    </update>

    <delete id="deleteBlog">
        delete from cl.t_blog where id = #{id}
    </delete>

    <select id="getAllRecommendBlog" resultMap="blog">
        select id,title from t_blog where recommend = 1 order by update_time desc
    </select>
    <!--搜索查询，不太会，需要巩固-->
    <select id="getSearchBlog" resultMap="blog">
        <bind name="pattern" value="'%'+query+'%'"/>
        select b.id,b.title,b.first_picture,
               b.views,b.update_time,b.description,
               t.name typename,t.id typeid,
               u.nickname,u.avatar
        from t_blog b,t_type t,t_user u
        where b.type_id = t.id
          and b.user_id = u.id
          and (b.title like #{pattern} or b.content like #{pattern})
    </select>



</mapper>